module.exports = {
  env: {
    es6: true,
    node: true
  },
  extends: ["eslint:recommended"],
  rules: {
    "max-len": [
      "error",
      {
        code: 110,
        ignoreComments: true,
        ignoreStrings: true,
        ignoreTemplateLiterals: true
      }
    ],
    "@typescript-eslint/quotes": ["error", "single"],
    "comma-dangle": ["error", "always-multiline"],
    "@typescript-eslint/class-name-casing": "error",
    "@typescript-eslint/explicit-member-accessibility": [
      "off",
      {
        overrides: {
          constructors: "off"
        }
      }
    ],
    "@typescript-eslint/indent": ["error", 2],
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/unified-signatures": "error",
    "arrow-body-style": "error",
    "constructor-super": "error",
    curly: "error",
    "dot-notation": "off",
    "eol-last": "error",
    "guard-for-in": "error",
    "@typescript-eslint/member-ordering": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-console": [
      "error",
      {
        allow: ["debug", "info", "time", "timeEnd", "trace"]
      }
    ],
    "no-debugger": "error",
    "no-empty": "off",
    "no-empty-functions": "off",
    "no-eval": "error",
    "no-fallthrough": "error",
    "no-new-wrappers": "error",
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-unused-labels": "error",
    "no-var": "error",
    "prefer-const": "error",
    radix: "error",
    "@typescript-eslint/tslint/config": [
      "error",
      {
        rules: {
          "comment-format": [true, "check-space"],
          "import-blacklist": [true, "rxjs/Rx"],
          "import-spacing": true,
          "max-line-length": [true, 110],
          "no-redundant-jsdoc": true,
          "no-shadowed-variable": true,
          "no-trailing-whitespace": true,
          "no-unused-expression": true,
          "one-line": [
            true,
            "check-open-brace",
            "check-catch",
            "check-else",
            "check-whitespace"
          ],
          quotemark: [true, "single"],
          semicolon: [true, "always"],
          "triple-equals": [true, "allow-null-check"],
          whitespace: [
            true,
            "check-branch",
            "check-decl",
            "check-operator",
            "check-separator",
            "check-type"
          ]
        }
      }
    ]
  },
  globals: {
    after: false,
    afterEach: false,
    before: false,
    beforeEach: false,
    context: false,
    describe: false,
    it: false,
    mocha: false,
    run: false,
    setup: false,
    specify: false,
    suite: false,
    suiteSetup: false,
    suiteTeardown: false,
    teardown: false,
    test: false,
    xcontext: false,
    xdescribe: false,
    xit: false,
    xspecify: false,
    __dirname: false,
    __filename: false,
    Buffer: false,
    clearImmediate: false,
    clearInterval: false,
    clearTimeout: false,
    console: false,
    exports: true,
    global: false,
    Intl: false,
    module: false,
    process: false,
    queueMicrotask: false,
    require: false,
    setImmediate: false,
    setInterval: false,
    setTimeout: false,
    TextDecoder: false,
    TextEncoder: false,
    URL: false,
    URLSearchParams: false,
    $: false,
    $$: false,
    browser: false,
    by: false,
    By: false,
    DartObject: false,
    element: false,
    protractor: false,
    Array: false,
    ArrayBuffer: false,
    Boolean: false,
    constructor: false,
    DataView: false,
    Date: false,
    decodeURI: false,
    decodeURIComponent: false,
    encodeURI: false,
    encodeURIComponent: false,
    Error: false,
    escape: false,
    eval: false,
    EvalError: false,
    Float32Array: false,
    Float64Array: false,
    Function: false,
    hasOwnProperty: false,
    Infinity: false,
    Int16Array: false,
    Int32Array: false,
    Int8Array: false,
    isFinite: false,
    isNaN: false,
    isPrototypeOf: false,
    JSON: false,
    Map: false,
    Math: false,
    NaN: false,
    Number: false,
    Object: false,
    parseFloat: false,
    parseInt: false,
    Promise: false,
    propertyIsEnumerable: false,
    Proxy: false,
    RangeError: false,
    ReferenceError: false,
    Reflect: false,
    RegExp: false,
    Set: false,
    String: false,
    Symbol: false,
    SyntaxError: false,
    toLocaleString: false,
    toString: false,
    TypeError: false,
    Uint16Array: false,
    Uint32Array: false,
    Uint8Array: false,
    Uint8ClampedArray: false,
    undefined: false,
    unescape: false,
    URIError: false,
    valueOf: false,
    WeakMap: false,
    WeakSet: false
  },
  parserOptions: {
    project: "tsconfig.json",
    sourceType: "module"
  },
  parser: "@typescript-eslint/parser",
  plugins: ["@typescript-eslint", "@typescript-eslint/tslint"]
};
